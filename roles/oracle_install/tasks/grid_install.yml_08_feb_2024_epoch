---
# Grid Installation tasks
- debug:
    msg: "Grid Base {{ora_base}} Grid_HOME {{grid_ora_home}}"


- name: Preparing ASM disks
  include_tasks: pre_asm_disks.yml
  with_items: "{{asm_diskgroup_disk}}"
  loop_control:
    loop_var: item

- name: Check for file gridSetup.sh
  stat:
    path: "{{grid_ora_home}}/gridSetup.sh"
  register: ora_file


- name: Extracting oracle grid source files from remote/nfs
  unarchive:
    src: "{{item}}"
    dest: "{{ grid_ora_home }}"
    keep_newer: yes
    owner: "{{ora_user}}"
    group: "{{ora_oinstall_group}}"
  loop:   "{{ oracle_grid_source_files |flatten(levels=1) }}"
  when: 
    - not ora_file.stat.exists
    - ora_binary_location in ['remote', 'nfs']



- name: Extracting oracle grid source files from local
  ansible.builtin.shell:
    cmd: "unzip -o {{ oracle_grid_source_files[0] }} -d {{ grid_ora_home }}"
  become_method: su
  become: yes
  when:
    - ora_binary_location == 'local'
    - not ora_file.stat.exists

- name: changing ownership to {{grid_ora_home}}
  file:
    path: "{{ grid_ora_home }}"
    state: directory
    recurse: yes
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0774'
  when: ora_dir.stat.exists

- name: Template out myruncluvfy.sh
  template:
    src:  templates/myruncluvfy.sh.j2
    dest: "{{ scripts_dir }}/myruncluvfy.sh"
    mode: '755'
  when: "(ignoreprecheck | default(false) == false)"
  tags: runcluvfy

- name: Run myruncluvfy.sh
  command:
    cmd: "./myruncluvfy.sh"
    chdir: "{{ scripts_dir }}"
  register: myruncluvfy_out
  become: yes
  become_user: "{{ ora_user }}"
  become_method: su
  changed_when: myruncluvfy_out.stdout is search('changed')
  when: "(ignoreprecheck | default(false) == false)"
  tags: runcluvfy

- name: runcluvfy 'FAILED'
  fail:
    msg: "runcluvfy failed. Check the output in {{ done_dir }}/myruncluvfy.out."
  when: "(ignoreprecheck | default(false) == false) and ('FAILED' in myruncluvfy_out.stdout or 'FAILED' in myruncluvfy_out.stderr)"
  tags: runcluvfy

- name: Check if the OPatch_bkp source directory exists
  stat:
    path: "{{grid_ora_home}}/OPatch_bkp"
  register: source_opatch_dir_stat
  ignore_errors: yes
  when: apply_ru 

- name: Move a OPatch directory from grid home to OPatch backup
  command: mv "{{ grid_ora_home }}/OPatch" "{{ grid_ora_home }}/OPatch_bkp"
  when: apply_ru and not source_opatch_dir_stat.stat.exists

- name: Check if the folder exists
  ansible.builtin.stat:
    path: "{{grid_ora_home}}/OPatch_bkp"
  register: folder_check
  when: apply_ru

- name: Display result
  debug:
    var: folder_check.stat.exists


- name: copying OPatch source files from remote/nfs to Grid home
  unarchive:
    src: "{{ opatch_path }}"
    dest: "{{ grid_ora_home }}"
    keep_newer: yes
    owner: "{{ora_user}}"
    group: "{{ora_oinstall_group}}"
  when:
    - apply_ru
    - ora_binary_location in ['remote', 'nfs']


- name: copying OPatch source files from local to Grid home
  ansible.builtin.shell:
    cmd: "unzip -o {{ opatch_path }} -d {{ grid_ora_home }}"
  become_method: su
  become: yes
  when:
    - ora_binary_location == 'local'
    - apply_ru


- name: changing ownership to {{grid_ora_home}}/OPatch
  file:
    path: "{{ grid_ora_home }}/OPatch"
    state: directory
    recurse: yes
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0774'
  when: ora_dir.stat.exists


- name: Check inventory for  grid home
  shell: |
    grep "{{grid_ora_home}}" "{{ora_inventory}}"/ContentsXML/inventory.xml
  register: check_grid_home
  ignore_errors: true

- name: Print grid home registration status
  debug:
    msg: "Grid home {{grid_ora_home}} is {{'not ' if check_grid_home.rc != 0 else ''}}registered in the central inventory."

- name: Check if grid home installed
  set_fact:
    asm_exists: "{{ grid_ora_home in check_grid_home.stdout }}"

- name: Print result
  debug:
    var: asm_exists


- name: Running rootpre.sh
  shell: "{{grid_ora_home}}/clone/rootpre.sh"
  when: not asm_exists

- name: Set fact for ansible_date_time.epoch
  set_fact:
    current_epoch: "{{ ansible_date_time.epoch }}"

- name: Generating oracle grid response file Template file to /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp
  template:
    src: ../templates/oracle19c_grid_install.rsp
    dest: "/tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp"
    owner: "{{ora_user}}"
    group: "{{ora_group}}"
    mode: '0644'
  when: not asm_exists

- name: install-home-grid | Install Oracle Grid Standalone with RU and with IgnorePreCheck
  shell: "{{grid_ora_home}}/gridSetup.sh -applyRU {{merged_variable}} -silent -ignorePrereqFailure -responseFile /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp -waitforcompletion >> {{ done_dir }}/grid_install.out 2>&1"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: grid_install
  failed_when: (grid_install.rc not in [0,6,254])
# 0 --> Successfull , 6 --> Successfull with Warnings, 254 --> Gridhome Already Installed
  when: ignoreprecheck and apply_ru and not asm_exists
- debug:
    msg: "GridSetup.sh status :: {{grid_install}}"



- name: install-home-grid | Install Oracle Grid Standalone with RU and without IgnorePreCheck
  shell: "{{grid_ora_home}}/gridSetup.sh -applyRU {{merged_variable}} -silent -responseFile /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp -waitforcompletion >> {{ done_dir }}/grid_install.out 2>&1"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: grid_install
  failed_when: (grid_install.rc not in [0,6,254])
  # 0 --> Successfull , 6 --> Successfull with Warnings, 254 --> Gridhome Already Installed
  when: not ignoreprecheck and apply_ru and not asm_exists
- debug:
    msg: "GridSetup.sh status :: {{grid_install}}"


- name: install-home-grid | Install Oracle Grid Standalone Base Version with IgnorePreCheck
  shell: "{{grid_ora_home}}/gridSetup.sh -silent -ignorePrereqFailure -responseFile /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp -waitforcompletion >> {{ done_dir }}/grid_install.out 2>&1"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: grid_install
  failed_when: (grid_install.rc not in [0,6,254])
# 0 --> Successfull , 6 --> Successfull with Warnings, 254 --> Gridhome Already Installed
  when: ignoreprecheck and not apply_ru and not asm_exists
- debug:
    msg: "GridSetup.sh status :: {{grid_install}}"

- name: install-home-grid | Install Oracle Grid Standalone Base Version without IgnorePrecheck
  shell: "{{grid_ora_home}}/gridSetup.sh -silent -responseFile /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp -waitforcompletion >> {{ done_dir }}/grid_install.out 2>&1"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: grid_install
  failed_when: (grid_install.rc not in [0,6,254])
  # 0 --> Successfull , 6 --> Successfull with Warnings, 254 --> Gridhome Already Installed
  when: not ignoreprecheck and not apply_ru and not asm_exists
- debug:
    msg: "GridSetup.sh status :: {{grid_install}}"

- name: Apply RU 1918 gteq
  include_tasks: applyru_gteq_1918.yml
  when: grid_asm_flag and apply_ru_gteq_1918


- name: Running orainstRoot.sh
  shell:
    cmd: "{{ora_inventory}}/orainstRoot.sh"
  when: asm_exists

- name: Running root.sh
  shell:
    cmd: "{{grid_ora_home}}/root.sh"
  register: rootscript
  when: asm_exists

- debug:
    msg: "root.sh output :: {{rootscript}}"

#- name: Stopping now
 # fail: 
  #  msg: "stopping the playbook because 19.3 base release installed"
  #when: not asm_exists and grid_install.rc in [0,6,254]
  
- name: Running ConfigTools
  shell: "{{grid_ora_home}}/gridSetup.sh -silent -executeConfigTools -responseFile /tmp/oracle_grid_install_rsp_file{{ansible_date_time.epoch}}.rsp  >> {{ done_dir }}/runconfigtools.out 2>&1"
  become: yes
  become_method: su
  become_user: "{{ora_user}}"
  environment:
    SKIP_ROOTPRE: "TRUE"
  register: grid_configtools
  when: asm_exists
  
- debug:
    msg: "Grid ConfigTools Status :: {{grid_configtools}}"
